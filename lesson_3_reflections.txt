When would you want to use a remote repository rather than keeping all your work local?
  i would want to use a remote repository 
  ->   when i working along with some other collaborators.
  ->   when i want to share the repository with others .
  ->   when i am working at a project from different machines .
  ->   when i want to keep online as a backup .

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	Sometimes it may be that i don't want to bring all the commits made by other collaborators onto my machine because if 
i am working on something and automatically master gets updated with remote than i would be in detached head state and i would have to create a differnt branch . or it may be that if git automatically syncs local repository with remote one then i might be in the middle of something and assume other files to wok in a certain way since files are inter-related but they get updated then it may not work and work is simply lost.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	branching is done when you want to try something experimental on your project and you want to be sure that your project does not break out . clones are done to bring repository to your local machine from github or from another spot in local machine. forks are made to clone the repositories from github to github . It uses someone else's project as a starting point for your idea. It is similar to cloning but different in some other aspects such as it provides a link to author of project at your forked github repository .

What is the benefit of having a copy of the last known state of the remote stored locally?
	it is useful for the purposes of collaboration . It tells us in case if local branch is ahead of remote branch or it is out of sync or is up to date with remote one . so we can work out accordingly .

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	Now that i know little bit of git and github , i would always try to make sure git or github is used whenever i collaborate because of its powers . Last sem we worked on a project and we didn't use any version control and i remember it became kind of messier of to have version names so random , and it was all confusing .
	Without using git or github i don't know how do people collaborate . It may be that they use some other version control like svn etc . without version control collaborating and even working on your own on large projects would be harder .

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	Although working directly in master is pretty easier but making changes in seperate branch offers some extra advantages . I would like to branch out whenever i work with a large group so that whenever i try something new it would not break master branch . There has to have a master branch in the group which always works . when the branch is ready to be merged with master it can be done so .
	Additionally existance of pull request is also possible due to branch .
